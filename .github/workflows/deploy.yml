name: CI/CD
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Build and push Docker images
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY="$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
          docker build -f Dockerfile.frontend -t $ECR_REGISTRY/job-tracker-frontend:latest .
          docker build -f Dockerfile.graphql -t $ECR_REGISTRY/job-tracker-graphql:latest .
          docker build -f Dockerfile.rest -t $ECR_REGISTRY/job-tracker-rest:latest .
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker push $ECR_REGISTRY/job-tracker-frontend:latest
          docker push $ECR_REGISTRY/job-tracker-graphql:latest
          docker push $ECR_REGISTRY/job-tracker-rest:latest
      - name: Deploy CDK stack
        run: |
          npm install -g aws-cdk
          cd cdk
          npm install
          npx cdk synth
          npx cdk deploy --require-approval=never
